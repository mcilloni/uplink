//  uplink, a simple daemon to implement a simple chat protocol
//  Copyright (C) Marco Cilloni <marco.cilloni@yahoo.com> 2016
//
//  This Source Code Form is subject to the terms of the Mozilla Public
//  License, v. 2.0. If a copy of the MPL was not distributed with this
//  file, You can obtain one at http://mozilla.org/MPL/2.0/.
//  Exhibit B is not attached; this software is compatible with the
//  licenses expressed under Section 1.12 of the MPL v2.

syntax = "proto3";

package protodef;

option java_package = "com.github.mcilloni.uplink";
option java_outer_classname = "UplinkProto";

service Uplink {
  rpc Exists (Username) returns (ErrCodeResp);
  rpc LoginExchange (stream LoginReq) returns (stream LoginResp);
  rpc NewUser (NewUserReq) returns (NewUserResp);
  rpc Resume (SessInfo) returns (ErrCodeResp);
}

message ErrCodeResp {
  oneof response {
    bool success = 1;
    ErrCode err_code = 2;
  }
}

message NewUserReq {
  string name = 1;
  bytes public_key = 2;
  bytes enc_private_key = 3;
  string ch_token = 4;
  bytes enc_ch_token = 5;
}

message NewUserResp {
  oneof response {
    SessInfo session_info = 1;
    ErrCode err_code = 2;
  }
}

message LoginReq {
  oneof login_steps {
    Username step1 = 1;
    FirstChallenge step2 = 2;
    SecondChallenge step3 = 3;
  }
}

message Username {
  string name = 1;
}

message FirstChallenge {
  bytes enc_ch_token = 1;
}

message SecondChallenge {
  bytes final_challenge = 1;
}

message LoginResp {
  oneof login_steps {
    string step1 = 1;
    UserInfo step2 = 2;
    SessInfo step3 = 3;
    ErrCode err_code = 4;
  }
}

message UserInfo {
  bytes public_key = 1;
  bytes enc_private_key = 2;
  bytes enc_ch_token = 3;
}

message SessInfo {
  int64 uid = 1;
  string session_id = 2;
}

enum ErrCode {
  EALREADYINVITED = 0;
  EEMPTYCONV = 1;
  ENAMEALREADYTAKEN = 2;
  ENOCONV = 3;
  ENOUSER = 4;
  ENOTINVITED = 5;
  ENOTMEMBER = 6;
  ESELFINVITE = 7;
  ESERVERFAULT = 8;
  EBROKEPROTO = 9;
  EAUTHFAIL = 10;
}
