//  uplink, a simple daemon to implement a simple chat protocol
//  Copyright (C) Marco Cilloni <marco.cilloni@yahoo.com> 2016
//
//  This Source Code Form is subject to the terms of the Mozilla Public
//  License, v. 2.0. If a copy of the MPL was not distributed with this
//  file, You can obtain one at http://mozilla.org/MPL/2.0/.
//  Exhibit B is not attached; this software is compatible with the
//  licenses expressed under Section 1.12 of the MPL v2.

syntax = "proto3";

package protodef;

option java_package = "com.github.mcilloni.uplink";
option java_outer_classname = "UplinkProto";

service Uplink {
  rpc AcceptFriendship (Name) returns (BoolResp);
  rpc AcceptInvite (ID) returns (BoolResp);
  rpc ConversationInfo (ID) returns (Conversation);
  rpc Conversations (Empty) returns (ConversationList);
  rpc Exists (Name) returns (BoolResp);
  rpc Friends (Empty) returns (FriendList);
  rpc Invites (Empty) returns (InviteList);
  rpc Login (AuthInfo) returns (SessInfo);
  rpc Messages (FetchOpts) returns (MessageList);
  rpc NewConversation (Name) returns (ID);
  rpc NewUser (AuthInfo) returns (SessInfo);
  rpc Notifications(Empty) returns (stream Notification);
  rpc Ping (Empty) returns (BoolResp);
  rpc ReceivedRequests (Empty) returns (FriendList);
  rpc RequestFriendship (Name) returns (BoolResp);
  rpc SendInvite (Invite) returns (BoolResp);
  rpc SendMessage (NewMsgReq) returns (NewMsgResp);
  rpc SentRequests (Empty) returns (FriendList);
  rpc SubmitRegID (RegID) returns (BoolResp);
}

message Empty {}

message BoolResp {
  bool success = 1;
}

message Name {
  string name = 1;
}

message ID {
  int64 id = 1;
}

message AuthInfo {
  string name = 1;
  string pass = 2;
}

message SessInfo {
  int64 uid = 1;
  string session_id = 2;
}

message Notification {
  enum Type {
    MESSAGE = 0;
    FRIENDSHIP_REQ = 1;
    FRIENDSHIP_ACC = 2;
    JOIN_REQ = 3;
    JOIN_ACC = 4;

    HANDLER_READY = 5;
  };

  Type type = 1;
  string user_name = 2;
  int64 conv_id = 3;
  string conv_name = 4;
  int64 msg_tag = 5;
  string body = 6;
};

message FriendList {
  repeated string friends = 1;
};

message ConversationList {
  repeated Conversation convs = 1;
};

message Conversation {
  int64 id = 1;
  string name = 2;
  Message last_message = 3;
};

message InviteList {
  repeated Invite invites = 1;
}

message Invite {
  string who = 1;
  int64 conv_id = 2;
  string conv_name = 3;
};

message FetchOpts {
  int64 conv_id = 1;
  int64 last_tag = 2;
};

message MessageList {
  int64 conv_id = 1;
  repeated Message messages = 3;
};

message Message {
  int64 tag = 1;
  string sender_name = 2;
  int64 timestamp = 3;
  string body = 4;
};

message NewMsgReq {
  int64 conv_id = 1;
  string body = 2;
};

message NewMsgResp {
  int64 tag = 1;
  int64 timestamp = 2;
};

message RegID {
  string reg_id = 1;
};
