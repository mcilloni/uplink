//  uplink, a simple daemon to implement a simple chat protocol
//  Copyright (C) Marco Cilloni <marco.cilloni@yahoo.com> 2016
//
//  This Source Code Form is subject to the terms of the Mozilla Public
//  License, v. 2.0. If a copy of the MPL was not distributed with this
//  file, You can obtain one at http://mozilla.org/MPL/2.0/.
//  Exhibit B is not attached; this software is compatible with the
//  licenses expressed under Section 1.12 of the MPL v2.

syntax = "proto3";

package protodef;

option java_package = "com.github.mcilloni.uplink";
option java_outer_classname = "UplinkProto";

service Uplink {
  rpc AcceptFriendship (Username) returns (BoolResp);
  rpc Exists (Username) returns (BoolResp);
  rpc Friends (Empty) returns (FriendList);
  rpc Login (AuthInfo) returns (SessInfo);
  rpc NewUser (AuthInfo) returns (SessInfo);
  rpc Notifications(Empty) returns (stream Notification);
  rpc PendingFriendships (Empty) returns (FriendList);
  rpc Ping (Empty) returns (BoolResp);
  rpc RequestFriendship (Username) returns (BoolResp);
}

message Empty {}

message BoolResp {
  bool success = 1;
}

message Username {
  string name = 1;
}

message AuthInfo {
  string name = 1;
  string pass = 2;
}

message SessInfo {
  int64 uid = 1;
  string session_id = 2;
}

message Notification {
  enum Type {
    MESSAGE = 0;
    FRIENDSHIP_REQ = 1;
    FRIENDSHIP_ACC = 2;
    JOIN_REQ = 3;
    JOIN_ACC = 4;
  };

  Type type = 1;
  string user_name = 2;
  int64 conv_id = 3;
  string body = 4;
};

message FriendList {
  repeated string friends = 1;
};
